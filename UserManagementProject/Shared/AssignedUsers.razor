<div class="assigned-users">
    <div class="assigned-users__group-list">
        <div @onclick="@(() => SelectedGroup = "1")" class="assigned-users__group @(SelectedGroup == "1" ? "assigned-users__group--active" : string.Empty)">
            <img src="/icons/star-filled.svg"/>
            <span>Grupa 1</span>
        </div>
        <div @onclick="@(() => SelectedGroup = "2")" class="assigned-users__group @(SelectedGroup == "2" ? "assigned-users__group--active" : string.Empty)">
            <img src="/icons/flower-filled.svg" />
            <span>Grupa 2</span>
        </div>
        <div @onclick="@(() => SelectedGroup = "3")" class="assigned-users__group @(SelectedGroup == "3" ? "assigned-users__group--active" : string.Empty)">
            <img src="/icons/smile-filled.svg" />
            <span>Grupa 3</span>
        </div>
        <div @onclick="@(() => SelectedGroup = "4")" class="assigned-users__group @(SelectedGroup == "4" ? "assigned-users__group--active" : string.Empty)">
            <img src="/icons/triangle-filled.svg" />
            <span>Grupa 4</span>
        </div>
        <div @onclick="@(() => SelectedGroup = "5")" class="assigned-users__group @(SelectedGroup == "5" ? "assigned-users__group--active" : string.Empty)">
            <img src="/icons/square-filled.svg" />
            <span>Grupa 5</span>
        </div>
    </div>
    <MudDropZone T="UserVM" Identifier="@SelectedGroup" AllowReorder="true"
                 Style="display: flex; flex-direction: row; flex-wrap: wrap; flex: 1;" />
</div>

@code {
    private const string DefaultSelectedGroup = "1";

    public string SelectedGroup { get; set; } = string.Empty;

    protected override void OnAfterRender(bool firstRender)
    {
        // workaround for animation blink while server prerender component for the first time
        if (firstRender)
        {
            SelectedGroup = DefaultSelectedGroup;
            StateHasChanged();
        }
    }
}